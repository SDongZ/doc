
【SS_NOTIFY.png】
http://www.cnblogs.com/pfa2008/archive/2010/01/25/1655947.html
static 控件，默认不处理鼠标等等输入事件。
CStatic 继承于 CWnd，是一种特殊的窗体。他可以显示文本字符串（这也是最常用的用法）、图标、指针(cursor)、位图和增强图文元件. 通常静态控件不提供输入和输出。但是如果把他的属性设置为 SS_NOTIFY，他可以通知其父窗口的击鼠标事件
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
获取文件对话框，用户的选择。
创建文件对话框可以使用DoModal()，在返回后可以利用下面的函数得到用户选择：
CString CFileDialog::GetPathName( ) 得到完整的文件名，包括目录名和扩展名如：c: est est1.txt
CString CFileDialog::GetFileName( ) 得到完整的文件名，包括扩展名如：test1.txt
CString CFileDialog::GetExtName( ) 得到完整的文件扩展名，如：txt
CString CFileDialog::GetFileTitle ( ) 得到完整的文件名，不包括目录名和扩展名如：test1
POSITION CFileDialog::GetStartPosition( ) 对于选择了多个文件的情况得到第一个文件位置。
CString CFileDialog::GetNextPathName( POSITION& pos ) 对于选择了多个文件的情况得到下一个文件位置，并同时返回当前文件名。但必须已经调用过POSITION CFileDialog::GetStartPosition( )来得到最初的POSITION变量
---------------------------------------------------------------------------
程序启动，不弹窗口，直接最小化到托盘。（不创建窗口？）

WINDOWPLACEMENT wp;
wp.length=sizeof(WINDOWPLACEMENT);
wp.flags=WPF_RESTORETOMAXIMIZED;
wp.showCmd=SW_HIDE;
SetWindowPlacement(&wp);

如何将MFC最小化到系统托盘，这次讲一下怎么能在最小化到系统托盘之前，将对话框隐藏
有了以上三步就可以实现对话框隐藏，但在程序启动的时候，系统状态栏里会有程序的图标闪一下，这就需要再做一些工作：
    第一，在OnInitDialog()函数中添加ModifyStyleEx(WS_EX_APPWINDOW, WS_EX_TOOLWINDOW);使对话框不在系统任务栏中显示。
    第二，在需要对话框显示的程序中添加ModifyStyleEx(WS_EX_TOOLWINDOW, WS_EX_APPWINDOW);使对话框显示在系统任务栏中
OnNcPaint函数解释：程序的需求是只要窗口在初始运行时隐藏，所以定义static int i = 2;
变量可以判断是否是首次显示窗口。之所以定义为2，是因为当程序开始运行时，系统发送（SendMessage）ON_WM_NCPAINT消息，此时程序的窗口边框应该被显示，但是此时我们没有作任何显示的操作，而是将窗口隐藏，ShowWindow(SW_HIDE)将把窗口的WS_VISIBLE属性去掉，继续执行，程序将检查WS_VISIBLE属性，如果没有则显示窗口，所以又发送了一个ON_WM_NCPAINT消息。所以我们要处理两次ON_WM_NCPAINT消息。其次，也可以定义static int i = 1;如果将i定义为1，则必须把窗口的Visible属性去掉，也就是在窗口上右键点击属性，选择More Styles,将Visible前面的勾去掉
void CMyDialog::OnNcPaint()
    {
        static int i = 2;
        if(i > 0)
        {
            i --;
            ShowWindow(SW_HIDE);
        }
        else
            CDialog::OnNcPaint();
    }
---------------------------------------------------------------------------
对话框有一个特性：一般情况下，按enter，则会检查当前那个控件获得焦点，若得到焦点的是按钮，则会响应相应的函数；如果不是按钮获得焦点，则自动响应OnOK()函数。如果OnOK()函数中调用了CDialog::OnOK()函数（或者没有生成自己的OnOK()函数），则对话框就会关闭。有的时候这很方便，但有的时候这不是我们想要的
CDialog::OnOK()
---------------------------------------------------------------------------
void UnlockWindowUpdate();
---------------------------------------------------------------------------

线程中是不可以调用父窗口的UpdateData，原因如下：
 
当创建窗口的线程和UpdateData调用所在的线程不是同一线程的时候MFC就会出错。为MFC把部分信息储存在线程的TLS中，这些信息对于MFC的执行非常重要，因此MFC会在很多代码里面检查线程状态是否正确。当在线程中调用父窗口的UpdateData时，相对于UpdateData的线程环境已经改变了，所以就会出错了。
可以使用如下方案：
1，在线程中使用 pDLG->GetDlgItem(ID)->SetWindowText(str)
2，线程向父对话框发送自定义消息，消息响应函数里调用UpDateData，该方案详见
---------------------------------------------------------------------------
#include <afxmt.h>  CCriticalSection
This is a part of the Microsoft Foundation Classes C++ library.
d:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\afx.h(24): fatal error C1189: #error :  Building MFC application with /MD[d] (CRT dll version) requires MFC shared dll version. Please #define _AFXDLL or do not use /MD[d]
---------------------------------------------------------------------------
http://msdn.microsoft.com/zh-cn/library/6khfastx(v=vs.90).aspx
//Catch all MFC exceptions, including COleExceptions.
  // OS exceptions will not be caught.
  catch (CException* pe) 
  {
     TRACE(_T("%s(%d): OLE Execption caught: SCODE = %x"), 
        __FILE__, __LINE__, COleException::Process(pe));
     pe->Delete();
  }

---------------------------------------------------------------------------
LVN_ITEMCHANGED
BEGIN_MESSAGE_MAP(cDlgRun, CDialog)
   ON_NOTIFY(LVN_ITEMCHANGED, IDC_LIST2, OnItemchangedList2)
END_MESSAGE_MAP()

/* ... */

void cDlgRun::OnItemchangedList2(NMHDR* pNMHDR, LRESULT* pResult) 
{
   NM_LISTVIEW* pNMListView = (NM_LISTVIEW*)pNMHDR;

   if ((pNMListView->uChanged & LVIF_STATE) 
       && (pNMListView->uNewState & LVNI_SELECTED))
   {
       // do stuff...
   }
}
---------------------------------------------------------------------------
ModifyStyle 与SetExtendedStyle有什么区别,

http://blog.csdn.net/sstower/article/details/9037671
主要区别就是扩展样式 具体的情况要看是什么控件 比如列表框用SetExtendedStyle就可以设置网格线的样式
ModifyStyleEx只是对窗口的GWL_EXSTYLE属性作设定，也即只是对窗口的常规扩展属性作设定，这种属性以WS_EX_作为前缀，比如WS_EX_CLIENTEDGE
LVS_EX_GRIDLINES  列表控件的扩展样式
在listctrl 控件中，它的扩展风格的值并没有存入窗口的GWL_EXSTYLE属性值中，而是通过发送LVM_SETEXTENDLISTVIEWSTYLE消息给listctrl控件来实现，因此它就不能通过ModifyStyleEx做设定
为什么微软没有把控件的扩展风格储存在GWL_EXSTYLE属性中，因为这个属性值为32位长的DWORD型，窗口的常规扩展属性即以WS_EX_作为前缀的属性，已经把它占完了，所以对listctrl 的扩展风格，微软只能把它放在其他地方了
---------------------------------------------------------------------------
clistctrl选中整行
m_list.ModifyStyleEx( 0, LVS_EX_FULLROWSELECT );  这个无效
m_list.SetExtendedStyle( LVS_EX_FULLROWSELECT );
m_ListCtrl.SetExtendedStyle(LVS_EX_FULLROWSELECT|LVS_EX_GRIDLINES|LVS_EX_HEADERDRAGDROP);
---------------------------------------------------------------------------
判断窗口是否隐藏
IsWindowVisible
---------------------------------------------------------------------------
【combobox-settopindex.png】
// Delete all of the text from the combo box's edit control.
m_MyComboBox.SetEditSel(0, -1);
m_MyComboBox.Clear();
// Delete all of the text from the combo box's edit control and copy it 
// to the clipboard.
m_MyComboBox.SetEditSel(0, -1);
m_MyComboBox.Cut();
// Set the first visible item in the combo box to be the middle item
m_pComboBox->SetTopIndex(m_pComboBox->GetCount() / 2);


对 combox 的 edit 对话框操作  (获取和删除edit对话框中的字符串)
m_manager_cbox.SetWindowTextW( L"" );  
---------------------------------------------------------------------------
设置对话框的初始，控件焦点（默认是TAB顺序第一个值） ctrl+d
---------------------------------------------------------------------------
【vc-open-file-dlg.png】 选择文件夹对话框，VSTUDIO 下面，怎么实现
---------------------------------------------------------------------------
CListCtrl 排序
http://blog.csdn.net/joany_yang/article/details/1640448
CListCtrl::SortItems
原型：
BOOL SortItems(
   PFNLVCOMPARE pfnCompare,
   DWORD_PTR dwData
);
http://msdn.microsoft.com/zh-cn/library/b4ceh1za(v=vs.90).aspx
int CALLBACK CompareFunc(LPARAM lParam1, LPARAM lParam2, LPARAM lParamSort);
The comparison function must
return a negative value if the first item should precede the second
return a positive value if the first item should follow the second
return zero if the two items are equal
---------------------------------------------------------------------------
【static-control-end-mellipses.png】静态控件，文本过长时，使用省略号。
ellipses[英][?'l?psi:z]

椭园，省略号；椭圆( ellipse的名词复数 )；（语法结构上的）省略( ellipsis的名词复数 )
---------------------------------------------------------------------------
对话框中，去掉关闭按钮？
去掉system menu,就可以了

---------------------------------------------------------------------------
class CMonthCalCtrl : public CWnd
http://msdn.microsoft.com/en-us/library/windows/desktop/bb760939(v=vs.85).aspx
MCN_SELECT notification code
MCN_SELCHANGE notification code
The MCN_SELECT notification code is similar to MCN_SELCHANGE, but MCN_SELECT is sent only in response to a user's explicit date selections. MCN_SELCHANGE applies to any selection change.
什么是明确的日期选择？
POSITION pos = m_myListCtrl.GetFirstSelectedItemPosition();
if (pos == NULL)
{
  TRACE(_T("No items were selected!\n"));
}
else
{
  while (pos)
  {
     int nItem = m_myListCtrl.GetNextSelectedItem(pos);
     TRACE(_T("Item %d was selected!\n"), nItem);
     // you could do your own processing on nItem here
  }
}
---------------------------------------------------------------------------
PostQuitMessage  EndDialog  OnOK
http://stackoverflow.com/questions/7562335/what-is-the-correct-way-to-programmatically-quit-an-mfc-application
模态与非模态对话框 的 EndDialog不同的意义。

Dialog-based app 的程序，主函数调用了，下面这个函数。对话框退出，程序就结束了。
BOOL CAudioMgrApp::InitInstance()
对话框回车，退出问题。
处理
void CAudioMgrDlg::OnOK()
{
        // TODO: 在此添加专用代码和/或调用基类
        //CDialogEx::OnOK();
}
OnOK();
http://stackoverflow.com/questions/16359005/cdialog-enddialog-from-a-modeless-dialog
http://msdn.microsoft.com/en-us/library/66b3y2ab%28v=vs.100%29.aspx
automatic data validation and exchange
f you implement the OK button in a modeless dialog box, you must override the OnOK method and call DestroyWindow inside it. Do not call the base-class method, because it calls EndDialog which makes the dialog box invisible but does not destroy it.
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------

#include <atlwin.h>  错误
 error C2872: “CDialogImpl”
 
 【OnLvnItemchangedList.png】
 void CAudioMgrDlg::OnLvnItemchangedList1(NMHDR *pNMHDR, LRESULT *pResult)
{
        LPNMLISTVIEW pNMLV = reinterpret_cast<LPNMLISTVIEW>(pNMHDR);
        if( ( pNMLV->uChanged & LVIF_STATE ) && ( pNMLV->uNewState & LVNI_SELECTED ) )
                OnSelectedAudio( pNMLV->iItem );
        *pResult = 0;
}

---------------------------------------------------------------------------
线程间传递 C++ 对象（CWnd 对象）造成的错误
http://bbs.csdn.net/topics/20115562
线程间传递 C++ 对象（CWnd 对象）造成的错误
描述：
     因为程序功能的需要，将一个 View 类的 this 指针传递给了线程实现函数中对应 View类的指针。在随后的使用中（此时接受 this 指针的线程已执行结束），想要通过该 this 指针引用 View 类的成员函数，再在被引用的 View 类成员函数中通过指向框架类的指针来引用框架类成员变量或函数，但实际运行中，不能够引用任何框架类的成员，否则出现异常。
错误原因：
    因为在线程中传递了 CWnd 对象，即在线程的实现函数中，用 this 指针对该线程类的成员变量赋值。其实质就是在主线程和辅助线程间进行了 C++ 对象的传递（this 指针， CWnd 对象），因而造成上述错误。不能够依赖于 C++ 对象的持续存在，也不能在线程间共享 MFC 类对象（直接派生于 CObject 的及 CString CRect 等除外）---- 《Inside Visual C++》4th Edition  P 217 。
解决办法：
    使用 GetSafeHwnd() 将 CWnd 对象转换为 HWND 句柄，在线程间共享 HWND 句柄，使用消息或FromHandle() 来达到使用对象的目的。



---------------------------------------------------------------------------
    【vc-project-property-linker-uac.png】


---------------------------------------------------------------------------
[MFC]按控件进行总结
【save-as-dialog.png】选择输出文件夹 (svn)


---------------------------------------------------------------------------
[MFC] 对话框模板中的，下方的“原型图像”的意思
是给你做界面的时候添加参照图片,你可以拿一个程序界面的截图放进去,调整透明度,然后参照着做
原型图像是用来作参照用的，真正的加载，需要把它加载到内存中去

---------------------------------------------------------------------------
[MFC] 下拉框，用代码更改，选择项
       SelectString(L"");
	   或者
	   m_cam_cbox.SetCurSel(m_current_device);


---------------------------------------------------------------------------
[MFC] how to make a combobox read only
Try changing the DropDown Style property to DropDownList. This can either be done through the designer or via code


---------------------------------------------------------------------------
[MFC] 处理COMBOX，选择事件
void CImageTrackerSettingDlg::OnCbnSelchangeCombo1()
{
	// TODO: 在此添加控件通知处理程序代码
	int index = m_cam_cbox.GetCurSel();
    
    
    
CComboBox:: 添加在后面
m_serial_port_cbox.AddString(L"COM1");
m_serial_port_cbox.AddString(L"COM2");
m_serial_port_cbox.AddString(L"COM3");
m_serial_port_cbox.AddString(L"COM4");
m_serial_port_cbox.AddString(L"COM5");
m_serial_port_cbox.AddString(L"COM6");
m_serial_port_cbox.AddString(L"COM7");
CComboBox:: 获取当前编辑框的文本
	CString cur_port;
	m_serial_port_cbox.GetWindowText(cur_port);